<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WeMedia on 庄泽伟的博客</title><link>https://crownjoker07.github.io/categories/wemedia/</link><description>Recent content in WeMedia on 庄泽伟的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>ZhuangZewei</copyright><lastBuildDate>Sun, 14 Sep 2025 10:51:00 +0800</lastBuildDate><atom:link href="https://crownjoker07.github.io/categories/wemedia/index.xml" rel="self" type="application/rss+xml"/><item><title>自媒体赛道选择思考</title><link>https://crownjoker07.github.io/p/%E8%87%AA%E5%AA%92%E4%BD%93%E8%B5%9B%E9%81%93%E9%80%89%E6%8B%A9%E6%80%9D%E8%80%83/</link><pubDate>Sun, 14 Sep 2025 10:51:00 +0800</pubDate><guid>https://crownjoker07.github.io/p/%E8%87%AA%E5%AA%92%E4%BD%93%E8%B5%9B%E9%81%93%E9%80%89%E6%8B%A9%E6%80%9D%E8%80%83/</guid><description>&lt;p&gt;希望自媒体是我表达自我的一种方式，可以在途中学习到很多开发相关的知识，也可以分享自己的经验和思考。但同时也希望内容短小精悍。&lt;/p&gt;
&lt;h3 id="-内容方向"&gt;🎯 内容方向
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;技术趣谈&lt;/strong&gt;：用通俗易懂的方式讲解游戏开发中的技术概念，比如碰撞检测、AI行为树、渲染管线等。可以用一些&lt;strong&gt;有趣的比喻&lt;/strong&gt;或&lt;strong&gt;实际案例&lt;/strong&gt;来降低理解门槛，让普通玩家也能感受到技术的魅力。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;“开发者视角”评游戏&lt;/strong&gt;：游玩热门或独立游戏时，不从普通玩家角度，而是从开发者视角分析其中的&lt;strong&gt;技术实现亮点&lt;/strong&gt;、&lt;strong&gt;设计巧思&lt;/strong&gt;或&lt;strong&gt;性能表现&lt;/strong&gt;。这能提供独特的观点。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;短小精悍的教程/技巧分享&lt;/strong&gt;：针对某个特定的、小而美的开发技巧或工具使用（如Unity/Unreal的某个插件、Shader效果、性能优化小技巧）制作&lt;strong&gt;几分钟的迷你教程&lt;/strong&gt;。确保内容聚焦，一次讲清楚一个问题。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>文件整理及备份流程研究</title><link>https://crownjoker07.github.io/p/%E6%96%87%E4%BB%B6%E6%95%B4%E7%90%86%E5%8F%8A%E5%A4%87%E4%BB%BD%E6%B5%81%E7%A8%8B%E7%A0%94%E7%A9%B6/</link><pubDate>Mon, 07 Apr 2025 19:47:00 +0800</pubDate><guid>https://crownjoker07.github.io/p/%E6%96%87%E4%BB%B6%E6%95%B4%E7%90%86%E5%8F%8A%E5%A4%87%E4%BB%BD%E6%B5%81%E7%A8%8B%E7%A0%94%E7%A9%B6/</guid><description>&lt;blockquote&gt;
&lt;p&gt;互联网人肯定会产生许多的文件，例如视频、图片、文档等，数据是最重要的，记录着一切，因此如何整理及备份好是及其重要的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="文件类型"&gt;文件类型
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;视频：A-Roll、B-Roll、日常视频&lt;/li&gt;
&lt;li&gt;图片：素材图片、封面图、缩略图、日常图片&lt;/li&gt;
&lt;li&gt;音频：BGM、SFX&lt;/li&gt;
&lt;li&gt;其他：工程文件、字幕文件、特效模板等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="树状分类体系"&gt;树状分类体系
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;原始素材
&lt;ul&gt;
&lt;li&gt;视频
&lt;ul&gt;
&lt;li&gt;原始视频&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;图片
&lt;ul&gt;
&lt;li&gt;原始图片&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;字体&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;加工素材（特效模板、字母文件）&lt;/li&gt;
&lt;li&gt;工程目录（例如PR、AE）&lt;/li&gt;
&lt;li&gt;成品输出（发布的视频版本）&lt;/li&gt;
&lt;li&gt;辅助资料（文案脚本、参考案例、版权证明等）&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="标准化命名规则"&gt;标准化命名规则
&lt;/h3&gt;&lt;p&gt;根据文件类型的主要参数或内容进行命名&lt;/p&gt;
&lt;h3 id="素材库"&gt;素材库
&lt;/h3&gt;&lt;p&gt;用来存放共同的视频素材、图片素材、音频素材等，使用Billfish进行管理&lt;/p&gt;
&lt;h3 id="备份"&gt;备份
&lt;/h3&gt;&lt;p&gt;使用Raid2阵列进行备份，再使用网盘备份一份&lt;/p&gt;</description></item><item><title>视频格式全解析</title><link>https://crownjoker07.github.io/p/%E8%A7%86%E9%A2%91%E6%A0%BC%E5%BC%8F%E5%85%A8%E8%A7%A3%E6%9E%90/</link><pubDate>Sat, 05 Apr 2025 21:54:00 +0800</pubDate><guid>https://crownjoker07.github.io/p/%E8%A7%86%E9%A2%91%E6%A0%BC%E5%BC%8F%E5%85%A8%E8%A7%A3%E6%9E%90/</guid><description>&lt;p&gt;视频格式是指用于存储、传输和播放视频数据的标准化规范，包含编码格式​（压缩算法）和容器格式​（封装方式）两大部分。其核心目的是在保证画质的前提下，通过压缩技术减少文件体积，并适配不同设备和场景的播放需求。&lt;/p&gt;
&lt;h3 id="容器格式container"&gt;​容器格式（Container）
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MKV：Matroska Video，开放标准的多媒体容器格式，由俄罗斯开发者Steve Lhomme于2002年提出。它并非视频编码格式，而是通过“容器”形式将多种编码的视频、音频、字幕等数据封装到单一文件中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WMV（Windows Media Video）：微软公司开发的视频编解码技术，属于Windows媒体框架的核心组件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;AVI（Audio Video Interleaved）：微软于1992年推出的多媒体容器格式，采用RIFF（资源交换文件格式）结构，将音频和视频数据交错存储以实现同步播放。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPEG1 System（Moving Picture Experts Group）：MPEG-1标准的核心组成部分，负责将压缩后的视频、音频及辅助数据进行多路复用和同步控制，确保音视频数据在播放时保持时间一致性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPEG1 Video CD：基于MPEG-1编码标准的光盘存储格式，诞生于1993年，由飞利浦、索尼等公司联合推广。它利用MPEG-1压缩技术将视频和音频数据存储于CD光盘中，实现了家庭影音数字化，成为20世纪90年代至21世纪初主流的视频传播媒介.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPEG2 VOB（Video Object）​：MPEG-2​是国际通用的视频压缩标准，支持高清分辨率和多声道音频编码，​VOB​是DVD专用的多媒体容器格式，基于MPEG-2标准封装视频、音频、字幕及导航数据&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPEG2 SVCD（Super Video CD）：​VCD的升级版，由中国主导研发并于1998年成为国家标准。它基于MPEG-2编码技术，旨在提供比VCD更高的画质和功能，同时避免依赖DVD的专利技术。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPEG2 DVD：数字多功能光盘（Digital Versatile Disc）的核心技术组合，通过MPEG-2编码标准实现视频压缩与存储，结合VOB（Video Object）容器格式管理音视频数据。MPEG-2为DVD提供广播级画质（最高720×576分辨率）和高效压缩能力，支持动态码率（3-15 Mbps），同时兼容多声道音频与交互功能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPEG2 TS（Transport Stream）：基于MPEG-2标准的容器格式，专为数字电视广播和不可靠传输介质​（如卫星、地面信号）设计。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPEG4 MP4：​MPEG-4是国际标准化组织（ISO/IEC）制定的多媒体压缩标准，涵盖音视频编码、交互式媒体、数字版权管理（DRM）等综合功能。其核心目标是实现高效压缩与内容交互性，支持从低带宽通信到高清视频的广泛场景。​MP4​（MPEG-4 Part 14）则是MPEG-4标准中定义的容器格式，负责封装视频、音频、字幕等数据流，并管理多媒体的同步与复用。简言之，MPEG-4是技术标准，而MP4是该标准下的一种文件存储与传输形式。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPEG4 MOV（QuickTime Movie）：苹果公司开发的容器格式，最初用于QuickTime播放器，支持封装视频、音频、文本、图像等多媒体数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPEG4 3GP1：为移动通信设备设计的简化版MP4容器，专为低带宽、小存储的移动设备优化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPEG4 3GP2：核心目标是为CDMA网络（如CDMA2000）提供低带宽、高兼容性的音视频传输方案。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPEG4 PSP：索尼PlayStation Portable（PSP）掌机支持的基于MPEG-4标准的视频格式，主要包含普通MP4和MP4-AVC两种规格
。其核心目标是适配PSP硬件性能与屏幕分辨率（480×272），同时通过高效压缩实现视频内容的便携播放。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPEG4 IPOD：便携设备的高效视频播放。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPEG4 Fragment：MPEG-4标准（ISO/IEC 14496-12）中定义的流式容器格式，专为动态传输和自适应流媒体设计。其核心特性在于将媒体数据分割为多个独立的片段（Fragment）​，每个片段包含元数据（moof）和媒体数据（mdat），从而实现高效的分发与灵活播放。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;OGV（Ogg Video）：基于Ogg容器的开源视频文件格式，由Xiph.Org基金会开发，旨在提供免专利限制、高质量的多媒体解决方案。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flash FLV：Adobe Systems开发的流媒体视频容器格式，专为网络传输设计，早期与Macromedia Flash Player深度绑定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flash SWF（Shock Wave Flash）：矢量动画格式&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DPG（Nintendo）：由日本开发者moonlight为任天堂NDS掌机设计的非官方视频格式，需配合Moonshell等软件播放。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WebM：由 Google 主导开发的开源视频容器格式，旨在为网络提供高质量、免版税的视频压缩方案。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Real Media：由 RealNetworks 公司于 20 世纪 90 年代开发的流媒体容器格式，主要服务于早期互联网环境下的音视频传输。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WTV（Windows Recorded TV Show）：微软为 ​Windows Media Center​ 开发的 ​电视录制容器格式，主要用于存储电视节目内容，包含音视频流、元数据及数字版权管理（DRM）信息。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MXF（素材交换格式）：由 ​SMPTE（美国电影与电视工程师学会）​​ 主导开发的专业音视频容器格式，旨在解决影视制作、存储和交换中的兼容性问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;WEBP：由 Google 于 2010 年推出的开源图像格式，旨在通过更高效的压缩算法减少网络传输中的图片体积，同时保持视觉质量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GIF（Graphics Interchange Format，图形交换格式）：由 ​CompuServe 公司于 1987 年开发的位图图像格式，旨在解决早期互联网环境下跨平台图像交换的需求。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Raw（原始图像格式）：数码相机、扫描仪等设备直接记录的未经处理的传感器数据，保留了拍摄场景的完整光学信息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="编码格式"&gt;编码格式
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MPEG-1（1992年）：首个国际标准，用于VCD制作，支持352×240@30fps分辨率，码率1.5 Mbps，采用YCbCr 4:2:0采样和DCT压缩。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPEG-2（1994年）：提升至高清支持（1920×1080），码率3-10 Mbps，应用于DVD和数字电视广播，支持隔行扫描和5.1声道音频。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MPEG-4（1998年）：引入基于对象的编码技术，支持流媒体和交互式内容，压缩效率比MPEG-2提升30%以上，扩展了H.264（MPEG-4 Part 10）标准。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;H.264（AVC）（2003年）：采用运动补偿、DCT变换和CABAC熵编码，压缩效率比MPEG-2提升50%，支持蓝光、视频会议和流媒体，兼容性极广。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;H.265 （HEVC）（2013年）：引入更精细的块划分（最大64×64）、多角度预测和并行处理，压缩效率比H.264高40%-50%，适配4K/8K视频，但专利费用较高。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;H.266 (VVC) (2020年)：支持360°全景视频和动态分辨率切换，压缩效率比HEVC再提升40%-50%，但解码复杂度大幅增加。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="视频码率"&gt;视频码率
&lt;/h3&gt;&lt;p&gt;视频码率（Bitrate）指单位时间内传输的视频数据量，单位为 ​kbps（千比特每秒）​，表示每秒传输的二进制位数。码率越高，视频数据的“取样率”越高，画质越接近原始素材，但文件体积也会随之增大。&lt;/p&gt;
&lt;h3 id="音频编码"&gt;音频编码
&lt;/h3&gt;&lt;p&gt;音频编码是将声音的模拟信号转换为数字信号的过程，核心目标是通过压缩减少数据冗余，同时尽可能保留听觉质量。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AAC：优化频率划分和预测算法，相同码率下音质优于MP3，流媒体首选。&lt;/li&gt;
&lt;li&gt;ALAC：苹果设备专用，兼容性与FLAC相当。&lt;/li&gt;
&lt;li&gt;FLAC：开源无损格式，压缩率约50%，适合音乐存档。&lt;/li&gt;
&lt;li&gt;Opus:开源、免专利费的现代音频编码格式，由国际互联网工程任务组（IETF）标准化，专为满足从语音通话到高保真音乐流媒体的多样化需求设计。&lt;/li&gt;
&lt;li&gt;PCM（脉冲编码调制）：未经压缩的原始音频格式，直接记录模拟信号的采样值，属于无损编码。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="比特率控制"&gt;比特率控制
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CBR（恒定比特率）：全程保持固定码率，通过调整量化参数（如压缩强度）维持稳定传输。&lt;/li&gt;
&lt;li&gt;VBR（可变比特率）：根据内容复杂度动态调整码率，高动态画面分配更高码率，静态场景降低码率。&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>自媒体攻略书</title><link>https://crownjoker07.github.io/p/%E8%87%AA%E5%AA%92%E4%BD%93%E6%94%BB%E7%95%A5%E4%B9%A6/</link><pubDate>Mon, 31 Mar 2025 20:55:00 +0800</pubDate><guid>https://crownjoker07.github.io/p/%E8%87%AA%E5%AA%92%E4%BD%93%E6%94%BB%E7%95%A5%E4%B9%A6/</guid><description>&lt;blockquote&gt;
&lt;p&gt;身为一名专业的程序员（自称），肯定要在互联网留下我的痕迹，想要自由，因此开始走上自媒体的道路&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;和我的好朋友DeepSeek深度讨论了之后，在琳琅满目的平台中选择适合自己的平台，本来打算是广撒网（就是一篇文章全平台发），但是一个人确实分不出这么多精力，而且我是真想在这个浮躁的社会，静下心来做成一件事，所以选择GitHubPage和Bilibili。&lt;br&gt;
基本流程：技术类的深度文章发布在博客中，有趣的技术内容发布B站，然后互相引流。&lt;/p&gt;
&lt;p&gt;主要分几个步骤&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;文件归纳、备份流程&lt;/strong&gt;。【视频、图片、游戏资源、各种工程文件等】&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;自媒体肯定会有非常多的视频、图片资源，如何合理归纳提高效率，及时备份避免文件丢失，导致工作功亏一篑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start="2"&gt;
&lt;li&gt;&lt;strong&gt;完善个人博客&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;将之前记录下来的研究成果搬运到博客上，并完善简历（将人生当成一场游戏，时刻记录自己变强的时间点）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start="3"&gt;
&lt;li&gt;&lt;strong&gt;学习新技术并分享&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;自媒体主要走技术分享这条赛道，满足自身的求知欲，想以透过本质看问题，通俗易懂的形式分享技术，提高自身的技术壁垒和自媒体水平&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start="4"&gt;
&lt;li&gt;&lt;strong&gt;制作一款属于自己的游戏&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;既然是游戏开发，那就得有游戏开发的样子，那就是制作自己的游戏&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;初心：不为了挣钱而挣钱，把自媒体或游戏制作当作一件服务大家的事&lt;/p&gt;</description></item></channel></rss>